{"ast":null,"code":"import profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'random post text',\n        likes: '81'\n      }, {\n        id: 2,\n        message: 'random post text#2',\n        likes: '73'\n      }],\n      newPostText: ''\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: 'Mike'\n      }, {\n        id: 2,\n        name: 'Anny'\n      }, {\n        id: 3,\n        name: 'Lisa'\n      }, {\n        id: 4,\n        name: 'John'\n      }],\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'Hi?'\n      }, {\n        id: 3,\n        message: 'Who said hi?'\n      }, {\n        id: 4,\n        message: 'Im said hi.'\n      }],\n      newMessageBody: \"\"\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _renderEntireTree() {// console.log('eee');\n  },\n\n  subscribe(observer) {\n    this._renderEntireTree = observer;\n  },\n\n  dispatch(action) {\n    this._state.profilePage = profileReducer(this._state.profilePage, action);\n    this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\n\n    this._renderEntireTree(this._state); // if (action.type === ADD_POST) {\n    //     let newPost = {\n    //         id: Math.floor(Math.random()*1000),\n    //         message: this._state.profilePage.newPostText,\n    //         likes: 0\n    //     }\n    //     this._state.profilePage.posts.push(newPost);\n    //     let refresh  = document.getElementById('typePostText');\n    //     refresh.value=\"\";\n    //     // this._state.profilePage.newPostText = '';   Обновление состояния теперь происходит локально в addPost внутри MyPosts\n    //     this._renderEntireTree(this._state);\n    // } else if (action.type === UPDATE_NEW_POST_TEXT) {\n    //     this._state.profilePage.newPostText = action.newText;\n    //     this._renderEntireTree(this._state);\n    // } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n    //     this._state.dialogsPage.newMessageBody = action.body;\n    //     this._renderEntireTree(this._state);\n    // } else if (action.type === SEND_MESSAGE) {\n    //     let newMessage = this._state.dialogsPage.newMessageBody;\n    //     let refresh = document.getElementById('typeMessageText');\n    //     refresh.value = '';\n    //     this._state.dialogsPage.messages.push({id: 6, message: newMessage});\n    //     this._renderEntireTree(this._state);\n    // }\n\n  }\n\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostTextActionCreator = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport const sendMessageActionCreator = () => {\n  return {\n    type: SEND_MESSAGE\n  };\n};\nexport const updateNewMessageActionCreator = body => {\n  return {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: body\n  };\n};\nwindow.store = store;\nexport default store; // addPost() {\n//     let newPost = {\n//         id: Math.floor(Math.random()*1000),\n//         message: this._state.profilePage.newPostText,\n//         likes: 0\n//     };\n//     this._state.profilePage.posts.push(newPost);\n//     this._state.profilePage.newPostText = '';\n//     this._renderEntireTree(this._state);\n// },\n// updateNewPostText(newText) {\n//     this._state.profilePage.newPostText = newText;\n//     this._renderEntireTree(this._state);\n// },","map":{"version":3,"sources":["C:/Users/1/Desktop/NewReact-app/ReactJS-social-network/src/redux/state.js"],"names":["profileReducer","dialogsReducer","store","_state","profilePage","posts","id","message","likes","newPostText","dialogsPage","dialogs","name","messages","newMessageBody","getState","_renderEntireTree","subscribe","observer","dispatch","action","addPostActionCreator","type","ADD_POST","updateNewPostTextActionCreator","text","UPDATE_NEW_POST_TEXT","newText","sendMessageActionCreator","SEND_MESSAGE","updateNewMessageActionCreator","body","UPDATE_NEW_MESSAGE_BODY","window"],"mappings":"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","sourcesContent":["import profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\n\r\n\r\n\r\nlet store = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: 'random post text', likes: '81'},\r\n                {id: 2, message: 'random post text#2', likes: '73'},\r\n            ],\r\n            newPostText: ''\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: 1, name: 'Mike'},\r\n                {id: 2, name: 'Anny'},\r\n                {id: 3, name: 'Lisa'},\r\n                {id: 4, name: 'John'},\r\n            ],\r\n            messages:  [\r\n                {id: 1, message: 'Hi'},\r\n                {id: 2, message: 'Hi?'},\r\n                {id: 3, message: 'Who said hi?'},\r\n                {id: 4, message: 'Im said hi.'},\r\n            ],\r\n            newMessageBody: \"\"\r\n        }\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    _renderEntireTree() {\r\n        // console.log('eee');\r\n    },\r\n    \r\n    subscribe(observer) {\r\n        this._renderEntireTree = observer;\r\n    },\r\n    dispatch(action) {\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\r\n\r\n\r\n        this._renderEntireTree(this._state);\r\n\r\n        // if (action.type === ADD_POST) {\r\n        //     let newPost = {\r\n        //         id: Math.floor(Math.random()*1000),\r\n        //         message: this._state.profilePage.newPostText,\r\n        //         likes: 0\r\n        //     }\r\n        //     this._state.profilePage.posts.push(newPost);\r\n        //     let refresh  = document.getElementById('typePostText');\r\n        //     refresh.value=\"\";\r\n        //     // this._state.profilePage.newPostText = '';   Обновление состояния теперь происходит локально в addPost внутри MyPosts\r\n        //     this._renderEntireTree(this._state);\r\n        // } else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n        //     this._state.profilePage.newPostText = action.newText;\r\n        //     this._renderEntireTree(this._state);\r\n        // } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\r\n        //     this._state.dialogsPage.newMessageBody = action.body;\r\n        //     this._renderEntireTree(this._state);\r\n        // } else if (action.type === SEND_MESSAGE) {\r\n        //     let newMessage = this._state.dialogsPage.newMessageBody;\r\n        //     let refresh = document.getElementById('typeMessageText');\r\n        //     refresh.value = '';\r\n        //     this._state.dialogsPage.messages.push({id: 6, message: newMessage});\r\n        //     this._renderEntireTree(this._state);\r\n        // }\r\n    }\r\n}\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n      type: ADD_POST\r\n    }\r\n  }\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n    return {\r\n      type: UPDATE_NEW_POST_TEXT, newText: text\r\n    }\r\n  }\r\n  export const sendMessageActionCreator = () => {\r\n    return {\r\n      type: SEND_MESSAGE\r\n    }\r\n  }\r\nexport const updateNewMessageActionCreator = (body) => {\r\n    return {\r\n      type: UPDATE_NEW_MESSAGE_BODY, body: body\r\n    }\r\n  }\r\nwindow.store = store;\r\nexport default store;\r\n\r\n\r\n\r\n\r\n// addPost() {\r\n    //     let newPost = {\r\n    //         id: Math.floor(Math.random()*1000),\r\n    //         message: this._state.profilePage.newPostText,\r\n    //         likes: 0\r\n    //     };\r\n    //     this._state.profilePage.posts.push(newPost);\r\n    //     this._state.profilePage.newPostText = '';\r\n    //     this._renderEntireTree(this._state);\r\n    // },\r\n    // updateNewPostText(newText) {\r\n    //     this._state.profilePage.newPostText = newText;\r\n    //     this._renderEntireTree(this._state);\r\n    // },"]},"metadata":{},"sourceType":"module"}