{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\git-app\\\\react-way-of-samurai\\\\src\\\\components\\\\Users\\\\UsersSearchForm.tsx\";\nimport { Field, Form, Formik } from 'formik';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUsersFilter } from '../../redux/users-selectors';\n\nconst usersSearchFormValidate = values => {\n  const errors = {};\n  return errors;\n};\n\nexport const UsersSearchForm = React.memo(props => {\n  const filter = useSelector(getUsersFilter);\n\n  const submit = (values, {\n    setSubmitting\n  }) => {\n    const filter = {\n      term: values.term,\n      friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\n    };\n    props.onFilterChanged(filter);\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      term: filter.term,\n      friend: String(filter.friend)\n    },\n    validate: usersSearchFormValidate,\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"term\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"friend\",\n    as: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"null\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Only followed\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"Only unfollowed\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Find\"))));\n});","map":{"version":3,"sources":["C:/Users/1/Desktop/git-app/react-way-of-samurai/src/components/Users/UsersSearchForm.tsx"],"names":["Field","Form","Formik","React","useSelector","getUsersFilter","usersSearchFormValidate","values","errors","UsersSearchForm","memo","props","filter","submit","setSubmitting","term","friend","onFilterChanged","String","isSubmitting"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,IAAf,EAAqBC,MAArB,QAAkC,QAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,cAAR,QAA6B,6BAA7B;;AAEA,MAAMC,uBAAuB,GAAIC,MAAD,IAAiB;AAC7C,QAAMC,MAAM,GAAG,EAAf;AACA,SAAOA,MAAP;AACH,CAHD;;AAgBA,OAAO,MAAMC,eAAoC,GAAGN,KAAK,CAACO,IAAN,CAAYC,KAAD,IAAW;AACtE,QAAMC,MAAM,GAAGR,WAAW,CAACC,cAAD,CAA1B;;AACA,QAAMQ,MAAM,GAAG,CAACN,MAAD,EAAmB;AAACO,IAAAA;AAAD,GAAnB,KAA2F;AACtG,UAAMF,MAAkB,GAAG;AACvBG,MAAAA,IAAI,EAAER,MAAM,CAACQ,IADU;AAEvBC,MAAAA,MAAM,EAAET,MAAM,CAACS,MAAP,KAAkB,MAAlB,GAA2B,IAA3B,GAAkCT,MAAM,CAACS,MAAP,KAAkB,MAAlB,GAA2B,IAA3B,GAAkC;AAFrD,KAA3B;AAKAL,IAAAA,KAAK,CAACM,eAAN,CAAsBL,MAAtB;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GARD;;AAUA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,MAAD;AACI,IAAA,kBAAkB,MADtB;AAEI,IAAA,aAAa,EAAE;AAACC,MAAAA,IAAI,EAAEH,MAAM,CAACG,IAAd;AAAoBC,MAAAA,MAAM,EAAEE,MAAM,CAACN,MAAM,CAACI,MAAR;AAAlC,KAFnB;AAGI,IAAA,QAAQ,EAAEV,uBAHd;AAII,IAAA,QAAQ,EAAEO,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMK,CAAC;AAACM,IAAAA;AAAD,GAAD,kBACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,EAAE,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,eAGI;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,CAHJ,eAQI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,CAPR,CADG,CAAP;AAuBH,CAnCmD,CAA7C","sourcesContent":["import {Field, Form, Formik} from 'formik'\r\nimport React from 'react'\r\nimport {FilterType} from '../../redux/users-reducer'\r\nimport {useSelector} from 'react-redux'\r\nimport {getUsersFilter} from '../../redux/users-selectors'\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype FriendFormType = 'true' | 'false' | 'null'\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: 'true' | 'false' | 'null'\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n    const filter = useSelector(getUsersFilter)\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <div>\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n            validate={usersSearchFormValidate}\r\n            onSubmit={submit}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\"/>\r\n\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n})\r\n"]},"metadata":{},"sourceType":"module"}