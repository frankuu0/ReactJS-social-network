{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\git-app\\\\react-way-of-samurai\\\\src\\\\components\\\\Header\\\\Header.tsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Avatar, Button, Col, Layout, Menu, Row } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentUserLogin, selectIsAuth } from '../../redux/auth-selectors';\nimport { logout } from '../../redux/auth-reducer';\nexport const Header = props => {\n  const isAuth = useSelector(selectIsAuth);\n  const login = useSelector(selectCurrentUserLogin);\n  const dispatch = useDispatch();\n\n  const logoutCallback = () => {\n    dispatch(logout());\n  };\n\n  const {\n    Header\n  } = Layout;\n  return /*#__PURE__*/React.createElement(Header, {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    theme: \"dark\",\n    mode: \"horizontal\",\n    defaultSelectedKeys: ['2'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/developers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 40\n    }\n  }, \"Developers\")))), isAuth ? /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(Col, {\n    span: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: login || '',\n    style: {\n      backgroundColor: '#87d068'\n    },\n    icon: /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 90\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: logoutCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"Log out\"))) : /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: '/login',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Login\")))));\n  /*  <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n          <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>*/\n};","map":{"version":3,"sources":["C:/Users/1/Desktop/git-app/react-way-of-samurai/src/components/Header/Header.tsx"],"names":["React","Link","Avatar","Button","Col","Layout","Menu","Row","UserOutlined","useDispatch","useSelector","selectCurrentUserLogin","selectIsAuth","logout","Header","props","isAuth","login","dispatch","logoutCallback","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2CC,GAA3C,QAAqD,MAArD;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,sBAAR,EAAgCC,YAAhC,QAAmD,4BAAnD;AACA,SAAQC,MAAR,QAAqB,0BAArB;AAIA,OAAO,MAAMC,MAA8B,GAAIC,KAAD,IAAW;AAErD,QAAMC,MAAM,GAAGN,WAAW,CAACE,YAAD,CAA1B;AACA,QAAMK,KAAK,GAAGP,WAAW,CAACC,sBAAD,CAAzB;AAEA,QAAMO,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,cAAc,GAAG,MAAM;AACzBD,IAAAA,QAAQ,CAACL,MAAM,EAAP,CAAR;AACH,GAFD;;AAIA,QAAM;AAACC,IAAAA;AAAD,MAAWT,MAAjB;AAEA,sBAAO,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,YAAxB;AAAqC,IAAA,mBAAmB,EAAE,CAAC,GAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnB,CADJ,CADJ,CADJ,EAOKW,MAAM,gBACF,4DAAG,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEC,KAAK,IAAI,EAAtB;AAA0B,IAAA,KAAK,EAAE;AAACG,MAAAA,eAAe,EAAE;AAAlB,KAAjC;AAA+D,IAAA,IAAI,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAAH,eAGG,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAHH,CADE,gBAQD,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADF,CAfV,CADG,CAAP;AA2BA;;;;;;;;AASH,CAjDM","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Avatar, Button, Col, Layout, Menu, Row} from 'antd'\r\nimport {UserOutlined} from '@ant-design/icons'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {selectCurrentUserLogin, selectIsAuth} from '../../redux/auth-selectors'\r\nimport {logout} from '../../redux/auth-reducer'\r\n\r\nexport type MapPropsType = {}\r\n\r\nexport const Header: React.FC<MapPropsType> = (props) => {\r\n\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const login = useSelector(selectCurrentUserLogin)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutCallback = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    const {Header} = Layout\r\n\r\n    return <Header className=\"header\">\r\n        <Row>\r\n            <Col span={18}>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item key=\"1\"><Link to=\"/developers\">Developers</Link></Menu.Item>\r\n                </Menu>\r\n            </Col>\r\n\r\n            {isAuth\r\n                ?<> <Col span={1}>\r\n                    <Avatar alt={login || ''} style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>\r\n                </Col>\r\n                    <Col span={5}>\r\n                        <Button onClick={logoutCallback}>Log out</Button>\r\n                    </Col>\r\n                </>\r\n                : <Col span={6}>\r\n                    <Button>\r\n                        <Link to={'/login'}>Login</Link>\r\n                    </Button>\r\n                </Col>}\r\n\r\n        </Row>\r\n\r\n\r\n    </Header>\r\n\r\n    /*  <header className={s.header}>\r\n          <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n          <div className={s.loginBlock}>\r\n              { props.isAuth\r\n                  ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                  : <NavLink to={'/login'}>Login</NavLink> }\r\n          </div>\r\n      </header>*/\r\n}\r\n"]},"metadata":{},"sourceType":"module"}