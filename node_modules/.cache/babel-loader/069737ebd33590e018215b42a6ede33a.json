{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'random post text',\n        likes: '81'\n      }, {\n        id: 2,\n        message: 'random post text#2',\n        likes: '73'\n      }] // newPostText: 'ggg'\n\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: 'Mike'\n      }, {\n        id: 2,\n        name: 'Anny'\n      }, {\n        id: 3,\n        name: 'Lisa'\n      }, {\n        id: 4,\n        name: 'John'\n      }],\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'Hi?'\n      }, {\n        id: 3,\n        message: 'Who said hi?'\n      }, {\n        id: 4,\n        message: 'Im said hi.'\n      }]\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _renderEntireTree() {// console.log('eee');\n  },\n\n  // addPost() {\n  //     let newPost = {\n  //         id: Math.floor(Math.random()*1000),\n  //         message: this._state.profilePage.newPostText,\n  //         likes: 0\n  //     };\n  //     this._state.profilePage.posts.push(newPost);\n  //     this._state.profilePage.newPostText = '';\n  //     this._renderEntireTree(this._state);\n  // },\n  // updateNewPostText(newText) {\n  //     this._state.profilePage.newPostText = newText;\n  //     this._renderEntireTree(this._state);\n  // },\n  subscribe(observer) {\n    this._renderEntireTree = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === 'ADD-POST') {\n      let newPost = {\n        id: Math.floor(Math.random() * 1000),\n        message: this._state.profilePage.newPostText,\n        likes: 0\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      let refresh = document.getElementById('typePostText');\n      refresh.value = \"\"; // this._state.profilePage.newPostText = '';   Обновление состояния теперь происходит локально в addPost внутри MyPosts\n\n      this._renderEntireTree(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._renderEntireTree(this._state);\n    }\n  }\n\n};\n\nlet addPostActionCreator = () => {\n  return {\n    type: 'ADD-POST'\n  };\n};\n\nlet updateNewPostTextActionCreator = text => {\n  return {\n    type: 'UPDATE-NEW-POST-TEXT',\n    newText: text\n  };\n};\n\nexport default store;","map":{"version":3,"sources":["C:/Users/1/Desktop/NewReact-app/ReactJS-social-network/src/redux/state.js"],"names":["store","_state","profilePage","posts","id","message","likes","dialogsPage","dialogs","name","messages","getState","_renderEntireTree","subscribe","observer","dispatch","action","type","newPost","Math","floor","random","newPostText","push","refresh","document","getElementById","value","newText","addPostActionCreator","updateNewPostTextActionCreator","text"],"mappings":"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","sourcesContent":["let store = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: 'random post text', likes: '81'},\r\n                {id: 2, message: 'random post text#2', likes: '73'},\r\n            ],\r\n            // newPostText: 'ggg'\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: 1, name: 'Mike'},\r\n                {id: 2, name: 'Anny'},\r\n                {id: 3, name: 'Lisa'},\r\n                {id: 4, name: 'John'},\r\n            ],\r\n            messages:  [\r\n                {id: 1, message: 'Hi'},\r\n                {id: 2, message: 'Hi?'},\r\n                {id: 3, message: 'Who said hi?'},\r\n                {id: 4, message: 'Im said hi.'},\r\n            ]\r\n        }\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    _renderEntireTree() {\r\n        // console.log('eee');\r\n    },\r\n    // addPost() {\r\n    //     let newPost = {\r\n    //         id: Math.floor(Math.random()*1000),\r\n    //         message: this._state.profilePage.newPostText,\r\n    //         likes: 0\r\n    //     };\r\n    //     this._state.profilePage.posts.push(newPost);\r\n    //     this._state.profilePage.newPostText = '';\r\n    //     this._renderEntireTree(this._state);\r\n    // },\r\n    // updateNewPostText(newText) {\r\n    //     this._state.profilePage.newPostText = newText;\r\n    //     this._renderEntireTree(this._state);\r\n    // },\r\n    subscribe(observer) {\r\n        this._renderEntireTree = observer;\r\n    },\r\n    dispatch(action) {\r\n        if (action.type === 'ADD-POST') {\r\n            let newPost = {\r\n                id: Math.floor(Math.random()*1000),\r\n                message: this._state.profilePage.newPostText,\r\n                likes: 0\r\n            }\r\n            this._state.profilePage.posts.push(newPost);\r\n            let refresh  = document.getElementById('typePostText');\r\n            refresh.value=\"\";\r\n            // this._state.profilePage.newPostText = '';   Обновление состояния теперь происходит локально в addPost внутри MyPosts\r\n            this._renderEntireTree(this._state);\r\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\r\n            this._state.profilePage.newPostText = action.newText;\r\n            this._renderEntireTree(this._state);\r\n        }\r\n    }\r\n}\r\nlet addPostActionCreator = () => {\r\n    return {\r\n      type: 'ADD-POST'\r\n    }\r\n  }\r\nlet updateNewPostTextActionCreator = (text) => {\r\n    return {\r\n      type: 'UPDATE-NEW-POST-TEXT', newText: text\r\n    }\r\n  }\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}